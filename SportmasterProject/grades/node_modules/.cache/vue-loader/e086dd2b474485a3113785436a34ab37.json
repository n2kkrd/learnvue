{"remainingRequest":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\src\\components\\grade\\StudentChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\src\\components\\grade\\StudentChart.vue","mtime":1683990962609},{"path":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683985595141},{"path":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683985596240},{"path":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\node_modules\\postcss-loader\\src\\index.js","mtime":1683985595610},{"path":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683985594686},{"path":"C:\\Users\\n2kn2\\OneDrive\\Рабочий стол\\Projects\\learnvue\\SportmasterProject\\grades\\node_modules\\vue-loader\\lib\\index.js","mtime":1683985595910}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyog0KHRgtC40LvQuCDQtNC70Y8g0LrQvtC90YLQtdC50L3QtdGA0LAg0LTQuNCw0LPRgNCw0LzQvCAqLwouY2hhcnQtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKLyog0KHRgtC40LvQuCDQtNC70Y8g0LHQu9C+0LrQvtCyINGBINC00LjQsNCz0YDQsNC80LzQsNC80LggKi8KLmNoYXJ0IHsKICB3aWR0aDogNTAwcHg7CiAgaGVpZ2h0OiA1MDBweDsKICBtYXJnaW46IDIwcHg7Cn0K"},{"version":3,"sources":["StudentChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"StudentChart.vue","sourceRoot":"src/components/grade","sourcesContent":["<template>\r\n    <div>\r\n      <!-- Вместо v-row и v-col использованы просто div'ы для простоты -->\r\n      <div class=\"chart-container\">\r\n        <div class=\"chart\">\r\n          <canvas ref=\"barChart\"></canvas>\r\n        </div>\r\n        <div class=\"chart\">\r\n          <canvas ref=\"pieChart\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Chart from 'chart.js';\r\n  \r\n  export default {\r\n    name: 'StudentChart',\r\n    props: {\r\n      studentData: {\r\n        type: Array,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Массив для меток на диаграмме\r\n          data: [] // Массив для данных на диаграмме\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.prepareChartData(); // Вызываем метод для подготовки данных\r\n      this.renderCharts(); // Вызываем метод для отрисовки диаграмм\r\n    },\r\n    methods: {\r\n      prepareChartData() {\r\n        // Для каждого студента в studentData добавляем имя в массив меток и оценку в массив данных\r\n        this.chartData.labels = this.studentData.map(student => student.name);\r\n        this.chartData.data = this.studentData.map(student => student.grade);\r\n      },\r\n      renderCharts() {\r\n        // Отрисовываем столбчатую диаграмму\r\n        new Chart(this.$refs.barChart, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: this.chartData.labels,\r\n            datasets: [\r\n              {\r\n                label: 'Оценки студентов',\r\n                data: this.chartData.data,\r\n                backgroundColor: '#2196f3'\r\n              }\r\n            ]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        });\r\n  \r\n        // Отрисовываем круговую диаграмму\r\n        new Chart(this.$refs.pieChart, {\r\n          type: 'pie',\r\n          data: {\r\n            labels: this.chartData.labels,\r\n            datasets: [\r\n              {\r\n                data: this.chartData.data,\r\n                backgroundColor: [\r\n                  '#f44336',\r\n                  '#9c27b0',\r\n                  '#3f51b5',\r\n                  '#009688',\r\n                  '#ff5722',\r\n                  '#795548',\r\n                  '#607d8b',\r\n                  '#00bcd4',\r\n                  '#cddc39',\r\n                  '#4caf50',\r\n                  '#ffeb3b',\r\n                  '#2196f3'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Стили для контейнера диаграмм */\r\n  .chart-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n  \r\n  /* Стили для блоков с диаграммами */\r\n  .chart {\r\n    width: 500px;\r\n    height: 500px;\r\n    margin: 20px;\r\n  }\r\n  </style>\r\n  "]}]}